sem_07_Dicts&Lists
1) На основе переданной строки (не содержащей повторяющихся символов) создать словарь, в котром каждому символу строки будет соответствовать номер символа в строке. Пример: строка 'abcdef'
2) Определить сколько элементов заданного списка содержится в словаре. Пример: определить сколько элементов списка l1 содержится в словаре d1 (ответ: 2)
3) Для строки evgene_o создать словарь где для всех символов, встречающихся в строке хранится число: сколько раз символ встретился в строке evgene_o.
4) Используя словарь, полученный в задаче 4.3 подсчитать количество строчных букв в строке evgene_o.
5) Написать код, который создает новый словарь с именем dic4, содержащий все пары ключ-значение из словарей dic1, dic2, dic3.
6) Просуммировать все значения из словаря dic4
7) Перемножить все значения из словаря dic4
8) Просуммировать произведения ключей на словаря dic4 на соответствующие им значения
9) На базе словаря dic6 создать словарь dic7 в котором нет пар ключ-значение с ключами, встречающимися в словаре dic5
10) Создать словарь dic8 в котором есть все пары ключ-значения из dic5, а для ключей, которые есть в dic6, но отсутствуют в dic5 добавить соответствующие пары ключ-значения в dic8.
11) Из списка ri1 получить упорядоченный по возрастанию список не имеющий повторяющихся значений.
11.2) Используя распаковку из списка списков сделать список, содержащий последовательность первых и последних значений вложенных списков и сохраняющий порядок их следования.
Пример: [[1, 2, 3], [4, 5, 6, 7], [9, 2]] -> [1, 3, 4, 7, 9, 2]
11.3) В словаре, полученном в задаче 3 удалить все пары ключ/значения для символов, встречающихся менее 5 раз.
4.12) Составить программу "мешок". Программа раз за разом запрашивает у пользователя новые значения и "кладет их в мешок". Если полученное значение уже есть в мешке, то оно не помещается в мешок, а пользователю сообщается о том, что такое значение уже есть в мешке. Максимальное количество значений в мешке - 5 штук. Если помещение в мешок очередного значения приводит к превышению допустимого количества значений, то из него извлекается одно из хранившихся в нем ранее значений и предъявляется пользователю. Для того чтобы выйти из программы пользователь вводит пустое значение. При выходе из программы пользователю демонстрируется содержимое мешка.
*) Дополнительная опция: пользователь может вводить сразу несколько значений, разделенных запятой. 
